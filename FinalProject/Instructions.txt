As part of the project, each pair of students who register using the link below will receive a set of images containing
coins from various countries. The images are arranged by increasing levels of difficulty, starting with images of individual
coins (to be used as a starting point for the project) and ending with images that show several coins.

Your task in this project is to identify and sum the value of the money in each image. The project must be submitted as
original code that contains all the images and is ready to run. When the project is run, the images should be displayed in
a graphical window, with the amount of money shown in the image title. The images will open in order of difficulty,
starting with the images of individual coins and then the images with several coins.

You are required to attach a detailed document to the project that explains the methodology and techniques you used to
identify and sum the value of the coins in the images.

The purpose of this work is to expose you to the challenges in the field of object recognition in image processing.
It is important to emphasize in advance that, unlike other exercises or projects you may be accustomed to, in this field
there are sometimes no clear-cut answers of "correct" or "incorrect." It is not always possible to achieve 100% success.
Our goal is to perform the best processing and recognition for all the images, but there may be images where we cannot
precisely identify the total amount of the coins. Therefore, the grade will also be based on your ability to think,
innovate, and strive to overcome these challenges. It is very important that you explain your solution in a clear and detailed manner.
Additionally, part of the grade will also be given for the ability to identify the amount of money in several additional
images of coins from the same country by images not provided to you in advance (do not worry, this is a small part of the grade).

1. Preprocessing
Convert to Grayscale: Coins have distinct textures and edges which can be more easily detected in a grayscale image.
Noise Reduction: Apply a Gaussian blur or median filter to reduce image noise without affecting edge information significantly.
2. Edge Detection
Use edge detection algorithms like the Canny edge detector to find the boundaries of coins.
3. Hough Circle Transform
Apply the Hough Circle Transform to detect circles in the preprocessed image, as coins will typically appear as circles from above.
4. Segmentation and Feature Extraction
Once circles are detected, segment each coin from the image.
Extract features that can help identify the coin, such as radius of the detected circle, color information (if any), and texture.
5. Classification
Based on the extracted features, classify the coins. This may involve a simple rule-based approach (e.g., radius size) or a more sophisticated classification algorithm.
6. Handling Overlaps
For overlapping coins, edge information might not be enough. You might need to look at contours and the interruption in the continuity of edges to infer overlaps.
Segmenting overlapping coins accurately can be complex and may require advanced techniques like contour analysis or training a machine learning model.
7. Output
The final step is to output the denomination and count of each coin.
For the images with multiple coins and partial coverings, the segmentation and classification can become significantly more complicated, as standard Hough Circle Transform may not work well with partial circles.